
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Copyright 2009 OpenSHA.org in partnership with
    the Southern California Earthquake Center (SCEC, http://www.scec.org)
    at the University of Southern California and the UnitedStates Geological
    Survey (USGS; http://www.usgs.gov)
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
      http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<project basedir="." default="build" name="Compile">

	<property name="build" value="../classes" />
	<property name="tmpdest" value="../classes.temp" />
	<property name="dist" value="../dist" />
	<property name="src" value="../src/" />
	<property name="dev" value="../dev/" />
	<property name="test" value="../test/" />
	<property name="lib.dir" value="../lib" />
	<property name="ant.lib.dir" value="lib" />
	<property name="svnant.lib.dir" value="${ant.lib.dir}/svnant-1.3.0" />
	<property name="ant.jnlp.war.lib.dir" value="${ant.lib.dir}/ant-jnlp-war" />
	<property name="javadoc.dir" value="../javadocs/" />
	<property name="keystore.alias" value="opensha" />
	<property name="keystore.pass" value="opensha" />
	<property name="project.jnlp.dir" value="jnlp" />
	<property name="app.build.type" value="nightly" />
	
	<path id="library.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${dev}/scratch/ISTI/isti.util.jar" />
	</path>

	<target name="compile">
		<javac debug="true" deprecation="false" optimize="true" destdir="${tmpdest}" nowarn="true" source="1.5" target="1.5" failonerror="yes" verbose="no" fork="yes" memoryInitialSize="512m" memoryMaximumSize="1024m">
			<classpath>
				<pathelement location="${build}" />
				<path refid="library.classpath" />
			</classpath>
			<src path="${src}" />
			<src path="${dev}" />
			<src path="${test}" />
			<include name="scratch/**" />
			<include name="org/**" />
			<include name="com/**" />
			<include name="nnls/**" />
			<exclude name="**/_nobuild/**" />
		</javac>
	</target>

	<target name="compile.tets" depends="">
		<javac debug="true" deprecation="false" optimize="true" destdir="${build}" nowarn="true" source="1.5" target="1.5" failonerror="yes" verbose="no" fork="yes" memoryInitialSize="512m" memoryMaximumSize="1024m">
			<classpath>
				<pathelement location="${build}" />
				<path refid="library.classpath" />
			</classpath>
			<src path="${test}" />
			<!--<include name="org/**" />-->
			<exclude name="**/_nobuild/**" />
		</javac>
	</target>

	<path id="svn.classpath">
		<pathelement location="${svnant.lib.dir}/svnjavahl.jar" />
		<pathelement location="${svnant.lib.dir}/svnant.jar" />
		<pathelement location="${svnant.lib.dir}/svnClientAdapter.jar" />
	</path>

	<taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask" classpathref="svn.classpath" />

	<target name="svn.update">
		<svn>
			<update revision="HEAD" dir="../" />
		</svn>
	</target>

	<target name="init">
		<mkdir dir="${tmpdest}" />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>

	<target name="precompilecleanup">
		<delete dir="${tmpdest}" failonerror="yes" verbose="no" />
	</target>

	<target name="svn.build" depends="svn.update,build">
	</target>

	<target name="build" depends="precompilecleanup,init,compile,rmi.all">
		<delete dir="${build}" failonerror="yes" verbose="no" />

		<move todir="${build}">
			<fileset dir="${tmpdest}" />
		</move>

		<delete dir="${tmpdest}" failonerror="yes" verbose="no" />
	</target>

	<target name="pre.jar" depends="precompilecleanup,init,compile,rmi.all">
	</target>
	
	<target name="sign.jar" if="sign.jars">
		<echo message="signing ${app.jar}"/>
		<signjar
			jar="${app.jar}"
			alias="${keystore.alias}"
			storepass="${keystore.pass}"/>
	</target>
	
	<target name="update.jnlps">
		<java
			classname="org.opensha.sha.gui.util.JNLPGen"
			fork="true"
			dir="../">
			<classpath>
				<pathelement location="${build}" />
				<path refid="library.classpath" />
			</classpath>
		</java>
	</target>
	
	<target name="update.wgcep.jnlps">
		<java
			classname="org.opensha.refFaultParamDb.gui.DBAppsJNLPGen"
			fork="true"
			dir="../">
			<classpath>
				<pathelement location="${build}" />
				<path refid="library.classpath" />
			</classpath>
		</java>
	</target>
	
	<!-- This copies the jar from the build dist dir to the web dir -->
	<target name="copy.server.jar" if="server.apps.dir">
		<!-- copy all of the JNLP's and icons -->
		<copy todir="${server.apps.dir}/${app.short.name}/${app.build.type}">
			<fileset dir="${project.jnlp.dir}/${app.build.type}">
				<include name="${app.short.name}.jnlp"/>
				<include name="icons/${app.short.name}*"/>
			</fileset>
		</copy>
		<!-- copy the jar file -->
		<copy file="${app.jar}"
			todir="${server.apps.dir}/${app.short.name}/${app.build.type}/"/>
		<!-- delete the old link (which should point to most recent) -->
		<!-- so the regular delete statement wasn't deleting sym links properly, thus
			the ugly exec'd delete below -->
		<exec executable="/bin/rm" failonerror="true">
			<arg value="-v"/>
			<arg value="-f"/>
			<arg value="${server.apps.dir}/${app.short.name}/${app.build.type}/${app.short.name}.jar"/>
		</exec>
		<!-- set up a link to the new most recent build -->
		<exec executable="/bin/ln" failonerror="true">
			<arg value="-v"/>
			<arg value="-s"/>
			<arg value="${server.apps.dir}/${app.short.name}/${app.build.type}/${app.jar.name}"/>
			<arg value="${server.apps.dir}/${app.short.name}/${app.build.type}/${app.short.name}.jar"/>
		</exec>
		<!-- delete the version in the build dir -->
		<delete file="${app.jar}"/>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		These targets are for copying resources            
	 - - - - - - - - - - - - - - - - - -->

	<target name="resource.erfs.main">
		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/" overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/">
				<include name="Frankel02/**" />
				<exclude name="Frankel02/**/*.java" />
				<include name="Frankel96/**" />
				<exclude name="Frankel96/**/*.java" />
				<include name="WG02/singleIterationWithModes.OpenSHA.30yr.txt" />
				<include name="WGCEP_UCERF1/**" />
				<exclude name="WGCEP_UCERF1/**/*.java" />
				<include name="step/*.txt" />
				<include name="YuccaMountain/*.txt" />
			</fileset>
		</copy>

		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/data" overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/data">
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.xls" />
			</fileset>
		</copy>

		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/griddedSeis" overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/griddedSeis">
				<include name="**/*.txt" />
				<include name="**/*.asc" />
			</fileset>
		</copy>
	</target>

	<target name="resource.erfs.dev">
		<!-- This is for ERFs that we won't include in our regular apps because they are under
		development -->
		<copy todir="${build}/scratch/bbradley" overwrite="true">
			<fileset dir="${dev}/scratch/bbradley">
				<include name="**/*.txt" />
			</fileset>
		</copy>
		
		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/GEM" overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/GEM">
				<include name="**/*.txt" />
			</fileset>
		</copy>

		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/NewZealand" overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/NewZealand">
				<include name="**/*.txt" />
			</fileset>
		</copy>
		<copy todir="${build}/scratch/ned/slab/slab1_usgs_data" overwrite="true">
			<fileset dir="${dev}/scratch/ned/slab/slab1_usgs_data">
				<include name="**/*.txt" />
				<include name="**/*.grd" />
			</fileset>
		</copy>

	</target>

	<target name="resource.erfs.gem">
		<!-- This is for the GEM ERFs...which we may or may not include in our regular apps. -->
		<copy todir="${build}/org/opensha/gem/GEM1/data/nshmp/south_america" overwrite="true">
			<fileset dir="${src}/org/opensha/gem/GEM1/data/nshmp/south_america">
				<include name="**/*.in" />
				<include name="**/*.out" />
				<include name="**/*.char*" />
				<include name="**/*.gr*" />
			</fileset>
		</copy>
		<copy todir="${build}/org/opensha/gem/GEM1/data/nshmp/us" overwrite="true">
			<fileset dir="${src}/org/opensha/gem/GEM1/data/nshmp/us">
				<include name="**/*.in" />
				<include name="**/*.out" />
				<include name="**/*.char*" />
				<include name="**/*.gr*" />
				<include name="**/*.65" />
				<include name="**/*.65" />
				<include name="**/grid/*" />
			</fileset>
		</copy>
	</target>

	<target name="resource.erfs.aux">
		<!-- This is for ERFs that we won't include in our regular apps because they require
		too much data, but may be useful to someone. -->
		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/NSHMP_CEUS08/" overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/NSHMP_CEUS08/">
				<include name="inputFiles/*.txt" />
			</fileset>
		</copy>
	</target>

	<target name="resource.imrs">
		<copy todir="${build}/org/opensha/sha/imr/attenRelImpl/" overwrite="true">
			<fileset dir="${src}/org/opensha/sha/imr/attenRelImpl/">
				<include name="**/*.txt" />
			</fileset>
		</copy>
	</target>

	<target name="resource.misc.required">
		<!-- Put things in here that are required by lots of our apps, but don't
		fit into another category well -->
		
		<copy todir="${build}/" overwrite="true" file="include/build.version"/>
		<copy todir="${build}/" overwrite="true" file="../LICENSE.txt"/>

		<copy todir="${build}/resources/images" overwrite="true">
			<fileset dir="${src}/resources/images" />
		</copy>
		
		<antcall target="resource.app.icons" />
		
		<copy todir="${build}/resources/help" overwrite="true">
			<fileset dir="${src}/resources/help" />
		</copy>

		<copy todir="${build}/resources/data/region" overwrite="true">
			<fileset dir="${src}/resources/data/region" />
		</copy>

		<copy todir="${build}/org/opensha/refFaultParamDb/dao/db/" overwrite="true">
			<fileset dir="${src}/org/opensha/refFaultParamDb/dao/db/">
				<include name="*.dat" />
			</fileset>
		</copy>
	</target>
	
	<target name="resource.app.icons" if="app.short.name">
		<copy todir="${build}/resources/images/icons" overwrite="true">
			<fileset dir="${project.jnlp.dir}/${app.build.type}/icons">
				<include name="${app.short.name}*.png" />
			</fileset>
		</copy>
	</target>

	<target name="resource.hazard.apps.server">
		<!--			IMR Resources				-->
		<antcall target="resource.imrs" />

		<!--			Other Resources				-->
		<antcall target="resource.misc.required" />
	</target>

	<target name="resource.hazard.apps">
		<!--			ERF Resources				-->
		<antcall target="resource.erfs.main" />
		<antcall target="resource.erfs.gem" />

		<antcall target="resource.hazard.apps.server" />
	</target>

	<target name="resource.all">
		<antcall target="resource.hazard.apps" />

		<antcall target="resource.erfs.dev" />
		<antcall target="resource.erfs.gem" />
		<antcall target="resource.erfs.aux" />
	</target>

	<target name="resource.tests">
		<copy todir="${build}" overwrite="true">
			<fileset dir="${test}">
				<include name="**/*.txt" />
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	These targets are for unjar-ing lib files        
	 - - - - - - - - - - - - - - - - - -->

	<target name="unjar.libs.common">
		<unjar src="${lib.dir}/itext-1.3.jar" dest="${build}" />
		<unjar src="${lib.dir}/jpedal.jar" dest="${build}" />
		<unjar src="${lib.dir}/jcommon-1.0.5.jar" dest="${build}" />
		<unjar src="${lib.dir}/jfreechart-1.0.2.jar" dest="${build}" />
		<unjar src="${lib.dir}/mysql-connector-java-3.1.6-bin.jar" dest="${build}" />
		<unjar src="${lib.dir}/dom4j-1.6.1.jar" dest="${build}" />
		<unjar src="${lib.dir}/poi-3.6-20091214.jar" dest="${build}" />
		<unjar src="${lib.dir}/f2jutil.jar" dest="${build}" />
		<unjar src="${lib.dir}/commons-math-2.1.jar" dest="${build}" />
		<unjar src="${lib.dir}/commons-lang-2.4.jar" dest="${build}" />
		<unjar src="${lib.dir}/commons-codec-1.4.jar" dest="${build}" />
		<unjar src="${lib.dir}/ncCore-4.0.jar" dest="${build}" />
		<unjar src="${lib.dir}/junit-4.5.jar" dest="${build}" />
		<unjar src="${lib.dir}/sdoapi.jar" dest="${build}" />
		<unjar src="${lib.dir}/ojdbc5.jar" dest="${build}" />
		<unjar src="${lib.dir}/jh.jar" dest="${build}" />
		<unjar src="${lib.dir}/guava-r07.jar" dest="${build}" />
		<unjar src="${lib.dir}/servlet.jar" dest="${build}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	These targets are for RMIC       
	 - - - - - - - - - - - - - - - - - -->

	<target name="rmi.erfs">
		<rmic base="${build}">
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteERF_ListFactoryImpl.class" />
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteEqkRupForecast_Impl.class" />
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteERF_ListImpl.class" />
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteERF_FactoryImpl.class" />
		</rmic>
	</target>

	<target name="rmi.hazard.curve">
		<antcall target="rmi.erfs" />
		<rmic base="${build}">
			<include name="org/opensha/sha/calc/remoteCalc/RemoteHazardCurveFactoryImpl.class" />
			<include name="org/opensha/sha/calc/remoteCalc/RemoteDisaggregationCalcFactoryImpl.class" />
			<include name="org/opensha/sha/calc/disaggregation/DisaggregationCalculator.class" />
			<include name="org/opensha/sha/calc/HazardCurveCalculator.class" />
		</rmic>
	</target>

	<target name="rmi.hazard.spectrum">
		<antcall target="rmi.hazard.curve" />
		<rmic base="${build}">
			<include name="org/opensha/sha/calc/remoteCalc/RemoteResponseSpectrumFactoryImpl.class" />
			<include name="org/opensha/sha/calc/SpectrumCalculator.class" />
		</rmic>
	</target>

	<target name="rmi.all">
		<antcall target="rmi.hazard.spectrum" />
	</target>

	<target name="javadoc">
		<delete dir="${javadoc.dir}" failonerror="yes" verbose="no" />
		<javadoc destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="OpenSHA">

			<fileset dir="${src}" defaultexcludes="yes">
				<include name="**/*.java" />
			</fileset>

			<doctitle><![CDATA[<h1>OpenSHA <a href="http://www.opensha.org">www.OpenSHA.org</a></h1>]]></doctitle>
			<!-- <bottom><![CDATA[<i>Copyright &#169; 2000 Dummy Corp. All Rights Reserved.</i>]]></bottom> -->
			<!-- <tag name="todo" scope="all" description="To do:"/> -->
			<!-- <link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="C:\tmp"/>
			<link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/> -->
		</javadoc>
		<copy todir="${javadoc.dir}" overwrite="true">
			<fileset dir="${src}/resources/doc" />
		</copy>

	</target>
</project>
