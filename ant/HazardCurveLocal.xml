<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="build.app" name="HazardCurveLocal">
	<description>
        Builds the HazardCurveLocal mode application as a launchable jar.
    </description>

	<!-- global properties -->
	<property name="build" value="../build" />
	<property name="dist" value="../dist" />
	<property name="src" value="../src" />
	<property name="dev" value="../dev" />
	<property name="lib.dir" value="../lib" />

	<path id="library.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- ================================= 
          target: build.app
         ================================= -->
	<target name="build.app" depends="init, compile, copy, pack" />
	
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: pack
          
          Creates manifest and jar; cleans up build dir.                     
         - - - - - - - - - - - - - - - - - -->
	<target name="pack">
		<manifest file="${build}/MANIFEST.MF">
			<attribute name="Main-Class" 
				       value="org.opensha.sha.gui.HazardCurveLocalModeApplication" />
			<attribute name="Built-By" value="${user.name}" />
		</manifest>
		<jar destfile="${dist}/HazardCurveApp.jar"
		     basedir="${build}"
		     manifest="${build}/MANIFEST.MF">
			<include name="at/**" />
			<include name="com/**" />
			<include name="edu/**" />
			<include name="net/**" />
			<include name="org/**" />
			<include name="resources/**" />
		</jar>
		<antcall target="clean.build.dir"></antcall>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: compile                      
         - - - - - - - - - - - - - - - - - -->
    <target name="compile">
        <antcall target="compile.java" />
        <antcall target="compile.rmi" />
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile.java
         - - - - - - - - - - - - - - - - - -->
	<target name="compile.java">
		<javac debug="true"
		       debuglevel="lines,source"
		       destdir="${build}"
		       fork="yes">
			<classpath>
				<pathelement location="${build}"/>
				<path refid="library.classpath" />
			</classpath>
			<src path="${src}" />
			<src path="${dev}" />
			<!-- spcifying the main() class compiles all dependencies -->
			<include name="org/opensha/sha/gui/HazardCurveLocalModeApplication.java" />
			<!-- paths to hard-coded classes -->
			<include name="org/opensha/sha/earthquake/rupForecastImpl/**" />
			<include name="org/opensha/sha/cybershake/openshaAPIs/**" />
			<include name="org/opensha/sha/imr/attenRelImpl/**" />
			<exclude name="org/opensha/sha/imr/attenRelImpl/gui/**" />
			<exclude name="org/opensha/sha/imr/attenRelImpl/test/**" />
		</javac>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: compile.rmi
         - - - - - - - - - - - - - - - - - -->
	<target name="compile.rmi">
		<rmic base="${build}">
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteERF_ListFactoryImpl.class" />
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteEqkRupForecast_Impl.class" />
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteERF_ListImpl.class" />
			<include name="org/opensha/sha/earthquake/rupForecastImpl/remote/RemoteERF_FactoryImpl.class" />
			<include name="org/opensha/sha/calc/remoteCalc/RemoteHazardCurveFactoryImpl.class" />
			<include name="org/opensha/sha/calc/remoteCalc/RemoteDisaggregationCalcFactoryImpl.class" />
			<include name="org/opensha/sha/calc/disaggregation/DisaggregationCalculator.class" />
			<include name="org/opensha/sha/calc/HazardCurveCalculator.class" />
		</rmic>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: copy                      
          
          Copies resources and unpacks required libs.
         - - - - - - - - - - - - - - - - - -->
    <target name="copy">
        <antcall target="copy.resources" />
        <antcall target="unjar.libs" />
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: copy.resources
         - - - - - - - - - - - - - - - - - -->
	<target name="copy.resources">
		<copy todir="${build}/resources/images/" overwrite="true">
			<fileset dir="${src}/resources/images/" />
		</copy>

		<!-- ========== ERF Resources ========== -->
		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/"
		      overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/">
				<include name="Frankel02/**" />
				<exclude name="Frankel02/**/*.java" />
				<include name="Frankel96/**" />
				<exclude name="Frankel96/**/*.java" />
				<include name="WG02/singleIterationWithModes.OpenSHA.30yr.txt" />
				<include name="WGCEP_UCERF1/**" />
				<exclude name="WGCEP_UCERF1/**/*.java" />
				<include name="step/*.txt" />
				<include name="YuccaMountain/*.txt" />
				<include name="GEM/*.txt" />
			</fileset>
		</copy>

		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/data" 
			  overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/data">
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.xls" />
			</fileset>
		</copy>

		<copy todir="${build}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/griddedSeis" 
			  overwrite="true">
			<fileset dir="${src}/org/opensha/sha/earthquake/rupForecastImpl/WGCEP_UCERF_2_Final/griddedSeis">
				<include name="**/*.txt" />
				<include name="**/*.asc" />
			</fileset>
		</copy>

		<!-- ========== IMR Resources ========== -->
		<copy todir="${build}/org/opensha/sha/imr/attenRelImpl/"
		      overwrite="true">
			<fileset dir="${src}/org/opensha/sha/imr/attenRelImpl/">
				<include name="**/*.txt" />
			</fileset>
		</copy>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: unjar.libs
          
          Unpack necessary libs for inclusion in app.                      
         - - - - - - - - - - - - - - - - - -->
	<target name="unjar.libs">
		<unjar src="${lib.dir}/itext-1.3.jar" dest="${build}" />
		<unjar src="${lib.dir}/jpedal.jar" dest="${build}" />
		<unjar src="${lib.dir}/jcommon-1.0.5.jar" dest="${build}" />
		<unjar src="${lib.dir}/jfreechart-1.0.2.jar" dest="${build}" />
		<unjar src="${lib.dir}/mysql-connector-java-3.1.6-bin.jar"
		       dest="${build}" />
		<unjar src="${lib.dir}/dom4j.jar" dest="${build}" />
		<unjar src="${lib.dir}/poi-2.5.1-final-20040804.jar" dest="${build}" />
		<unjar src="${lib.dir}/f2jutil.jar" dest="${build}" />
		<unjar src="${lib.dir}/BrowserLauncher2-1_3.jar" dest="${build}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
	<target name="init">
		<mkdir dir="${dist}" />
		<mkdir dir="${build}" />
		<!-- clean build dir if it wasn't cleaned-->
		<antcall target="clean.build.dir" />
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: clean.build.dir                      
         - - - - - - - - - - - - - - - - - -->
	<target name="clean.build.dir">
		<delete includeemptydirs="true">
			<fileset dir="${build}" includes="**/*"/>
		</delete>
	</target>

</project>
