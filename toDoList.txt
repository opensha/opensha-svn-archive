**************** SHORT TERM (HIGH PRIORITY): ****************
-------------------------------------------------------------

HazardSpectrumApplet - make it so the ERF_GuiBean and EqkRupSelectorGuiBean use the same ERF instances?

Finish implementing Set2-Case5 (Nitin knows it's incorrectly implemented).

HazardCurveApplet:

	Axis control panel doesn't seem to work for log-log plots (try setting custom)

	Exception thrown by MagFreqDistParameterEditor are not shown in a popup window

	"Set X values for Hazard Curve Calc." control panel doesn't seem to work
	(and lacks "Done" button)

	"Set Site Params from CVM" control panel doesn't work for bay area.

Deploy SimplePoissonFaultERF in servlet mode and remove the servlet mode PEER_FaultForecast (update the ERF servlet-mode GUIbean accordingly).

Remove the following since they are no longer needed (after doing the above):

	PEER_FaultForecast
	PEER_ListricFaultForecast
	PEER_FaultSource

	org.scec.sha.earthquake.demo	(old demo that we don't need anymore)

Move the following from org.scec.sha.earthquake to org.scec.sha.earthquake.rupForecastImple:

	PointPoissonEqkSource
	SimplePoissonFaultERF
	SimplePoissonFaultSource


Lets chance syncToModel (and "synchToModel" as it is spelled in some places) method to something like refreshParamEditor (assuming this is used only to refresh editors).

Make the WG02 ERF servlet so that more than one user can use it at any given time. 

JFreeChart:  add method to allow our style of log-plot labeling (remove booleans), and another method for labeling minor axes as an option.  Add button for changing XY data in our Log Plot Tester Applet.  Make this Applet one of their demos?

Fix GriddedFaultApplet - horz/vert scaling - may be fixed; check it out.

Try to solve problem with cutting and pasting on Mac OS X with Java 1.4.1. - Apple is working on this with info from Nitin.  Actually they claim that Panther no longer has this problem.

Make J-unit tests for Campbells tests of the attenuation relationships (generalize as much as possible); shakemap tests well come from Ken later.

Generalize ERF servlets so that one object can be used for any arbitrary ERF (or ERF epistemic list).  Ned will check this out.

Finish STEP map making capability according to feedback from Matt and Lucy (and solve the Vs30 on water issue).

SimpleListricGriddedFaultFactory has problem - run main method to find it.  Ned will look at this.

Develop HazardSpectrumApplet for Caltrans.  This is like the hazard curve calculator except:

	X axis will be SA period.  We won't need the X_ValuesInCurveControlPanel here because 
	the X-axis values will be exactly whatever the chosen IMR supports.

	Remove the IMT_GuiBean because only SA will be supported 
	(one can plot a spectrum only for SA).

	add the IMLorProbSelectorGuiBean (so the user can specify the Y-axis).  If the
	user has chosen "prob@IML", the hazard curve will only need one X-axis value
	(the chosen IML).  If the user has chosen IML@prob, then we will need to interpolate
	a full hazard curve to find the IML (we'll need a wide-enough range of x-axis IMLs
	to find the one for the chosen IML; this might be tricky)

	at the bottom of the app, make a two-item pick list where the user can 
	choose "Probabilistic" or "Deterministic".  When "Probabilistic" is chosen,
	show the ERF_GuiBean, and do the full hazard calculation 
	(using the HazardCurveCalculator) for each SA-period on the X axis. 
	If "Deterministic" is chosen, show the EqkRupSelectorGuiBean and only do the
	hazard calculation for the single rupture (using the IMR directly, which 
	basically assumes the rupture has occurred (prob=1), which is the definition
	of "Deterministic" hazard).  

	Remove the "Dissagregation" control panel (this will need special treatment here).

Explore the benefit of using RelativeLocation.getApproxHorzDistance(*) as opposed to RelativeLocation.getHorzDistance(*) in the hazard calculations.

Fix horizontal streaking due to setting site effects in gridded region from CVM for small grid spacings.

Should we create an AjustableParametersAPI for all objects that have a list of adjustable parameters?

Make the setting values from CVM to be webservice rather than a servlet. Currently we are reading the CVM values from the flat files, make it such that it can be plugged to different CVM webservices. 

Investigate what proper longitude limits are with respect to RelativeLocation, 0 to 360, -180 to 180, -180 to 360, or -360 to 360.  Should we be using UTM coordinates?

Go through existing apps and list issues we'd like to improve.

Add the following adjustable parameters to the wg99/02 Fortran code:

		(Mike's order of priority)
		Start time, Time interval
		M threshold (for probability outputs)
		Probability model weights
		COV values and weights
		M-logA model weights
		Treatment of R (slip rate vs area scaling)
		Magnitude pdf (sigma value)
		Segmentation model weights
		Background a and b values

	Have WG02 group make the following changes to code(?):

    		addition of intermediate segment lats and lons for our output file

**************** LONG TERM (LOWER PRIORITY): ****************
-------------------------------------------------------------

IMR_GuiBean 	-extend to allow multiple IMRs to be selected, with relative weights 
		applied to each.  This will require using an epistemic list control 
		panel (generalize existing one?) to declare what to compute and 
		plot(ind. curves, mean, fractile, ...). 

		-Create capability to associate IMRs to specific source types in the calculations
		(this will take some thought).

ProbEqkSource	Define field to declare what type of source it is 
		(e.g., subduction zone vs normal vs reverse ...) and add to API. 
		Ned will work on what the various options should be.

ERF		-extend API to include getting max and min magnitude, and the various types of 
		sources generated (to check for compatibility with each chosen IMR)

Think about optimizing calculations in terms of not redoing anything that doesn't 
need to be redone (e.g., don't recompute ERF-list hazard curves if user only wants
to plot a different fractile).  This should be resolved with consideration to the
full range of user experiences.


ScenarioShakeMapApp

	Add plotting of rupture surface as a dot at each point on the gridded surface?
	Use getInfo for each source to provide users with information.

Ned - Run a forecast with non-zero mags up to mag 10 to search for numerical breakdowns (e.g., Math.pow(-num, non-integer) ) or search for for Math.pow.

SimpleGriddedFaultFactory

	we create a new instance of this object every time we create 
	a new surface; it would be more efficient to use the set methods
	before getting a new surface (use the setAll() method added by Ned).

(even lower priority below)

Allow choosing of multiple ERFs (e.g., hand built ERF_EpistemicList)

Implement getApplicableRegion() and isLocWithinApplicableRegion() methods in implemented ERFs.

DisaggregationCalculator is similar to HazardCurveCalculator; should the two be combined?

HazardCurveApplet - In the IMT editor section the loop over independent parameters of the chosen IMT can presently deal only with DoubleDiscreteParameter objects (rather than any parameter type).  Should we generalize this?

EvenlyGriddedSurface: 1) make the getNthSubsetSurface() method more efficient, and have the getAveDip() method compute the dip explicitly (in case it's a subset of a listric fault)?

Decide how to handle rake=NaN in each IMR (can rake-NaN in an EarthquakeRupture object?).

Decide on and implement a licensing agreement.

Decide on and implement email groups.

Figure out why applets don't resize with browser window size on Mac OS.

Create an archived email list or discussion board for OpenSHA.

Add 3D visualization to GriddedFaultApplet (need Java3D on Mac OS first)?

Go over exception throwing in entire package to make sure it looks appropriate.

AttenRelApp:

	Problem:  if you violate a parameter constraint when hitting the add trace button 
	(rather than hitting return in the parameter editor) you need to hit add trace again
	if you accept the value.  Nitin and Vipin say this is a problem with Java (focus at
	time of exception throwing is lost).


