**************** SHORT TERM (HIGH PRIORITY): ****************
-------------------------------------------------------------

Make sure last x-axis label is not cut off in all our applications (can't be done dynamically based on width of label).

JFreeChart - remove negative value option for log axes and the "10^N" format option.  clean up the class and document changes in the code (the way they do).  Submit class with app to JFreeChart (with Eric Cced).

Make all interpolations of hazard curves based on log(prob) vs log(IML) or log(EqvPoisRate) vs log(IML).  Do this by adding a method to DiscretizedFunctionAPI (e.g., getInterpolatedY_inLogXLogYDomain(double x).

Change "Set X Values for Hazard Curve Calc" as follows:

	new name: "X-axis (IML) Values for Hazard Curves"

	add a pick list with three options (for now)

		a) "PEER Test-Case Values"

		b) "Custom Values"

		c) "Min, Max, and Num", & a "set" button

		d) "Default"

	if (a) is chosen, set as the PEER values 
	(and don't allow user to hand-edit values, but do show them)

	if (b) is chosen, user will paste their own values in (allow hand-editing)

	if (c) is chosen, allow user to set the min, max, num, and then make discrete values 
	that are evenly discretized in the log domain (don't allow hand editing, but do show)

		e.g., 	delta_in_log_domain = (log(max)-log(min))/(num-1)

	if (d) is chosen, use (c) with min=0.001, max=10.0, and num=41  
	(note that these defaults are good for PGA and SA but not necessarily for other 
	IMTs (e.g., PGV); we have a problem that this control panel does not know what IMT
	has been selected).  Don't allow hand editing, but do show values.  When this is done
	we will have to change the PEER test case selector control panel to choose the right
	X values (since they will no longer be the default).


See if mac can now handle different styles of tabs - can change only if you change the entire look and feel (e.g., not OS specific).

HazardSpectrumApplet - Look into making it so the ERF_GuiBean and EqkRupSelectorGuiBean use the same ERF instances (in cases where both have the same ERF, although sometime on or the other might have an ERF that the other one does not)?

Finish implementing Set2-Case5 (Nitin knows it's incorrectly implemented).

Check lat/lon values of cities in sites of interest.  Lets try to find some official list of city lats and lons for at least california.

Deploy SimplePoissonFaultERF in servlet mode and remove the servlet mode PEER_FaultForecast (update the ERF servlet-mode GUIbean accordingly).  Ned will check out (from web-site jars).

Lets chance syncToModel (and "synchToModel" as it is spelled in some places) method to something like refreshParamEditor (assuming this is used only to refresh editors).

Make the WG02 ERF servlet so that more than one user can use it at any given time. 

Look at Bruce's code for Shape-file generation for scenarios (different from probabilistic map inputs)

Resolve memory issues, after we figure out exactly what they are.

Implement 2002 National Hazard maps model - Ned will work on.

Fix GriddedFaultApplet - horz/vert scaling - may be fixed; check it out.

Make J-unit tests for Campbells tests of the attenuation relationships (generalize as much as possible); shakemap tests well come from Ken later.  ned should look at.  Nitin says there are still important discrepancies.

Generalize ERF servlets so that one object can be used for any arbitrary ERF (or ERF epistemic list).  Ned will check this out.

Finish STEP map making capability according to feedback from Matt and Lucy (and solve the Vs30 on water issue).

SimpleListricGriddedFaultFactory has problem - run main method to find it.  Ned will look at this.

Explore the benefit of using RelativeLocation.getApproxHorzDistance(*) as opposed to RelativeLocation.getHorzDistance(*) in the hazard calculations.

Fix horizontal streaking due to setting site effects in gridded region from CVM for small grid spacings.

Should we create an AjustableParametersAPI for all objects that have a list of adjustable parameters?

Make the setting values from CVM to be webservice rather than a servlet. Currently we are reading the CVM values from the flat files, make it such that it can be plugged to different CVM webservices. 

Investigate what proper longitude limits are with respect to RelativeLocation, 0 to 360, -180 to 180, -180 to 360, or -360 to 360.  Should we be using UTM coordinates?

Go through existing apps and list issues we'd like to improve.

Add the following adjustable parameters to the wg99/02 Fortran code:

		(Mike's order of priority)
		Start time, Time interval
		M threshold (for probability outputs)
		Probability model weights
		COV values and weights
		M-logA model weights
		Treatment of R (slip rate vs area scaling)
		Magnitude pdf (sigma value)
		Segmentation model weights
		Background a and b values

	Have WG02 group make the following changes to code(?):

    		addition of intermediate segment lats and lons for our output file

**************** LONG TERM (LOWER PRIORITY): ****************
-------------------------------------------------------------

IMR_GuiBean 	-extend to allow multiple IMRs to be selected, with relative weights 
		applied to each.  This will require using an epistemic list control 
		panel (generalize existing one?) to declare what to compute and 
		plot(ind. curves, mean, fractile, ...). 

		-Create capability to associate IMRs to specific source types in the calculations
		(this will take some thought).

ProbEqkSource	Define field to declare what type of source it is 
		(e.g., subduction zone vs normal vs reverse ...) and add to API. 
		Ned will work on what the various options should be.

ERF		-extend API to include getting max and min magnitude, and the various types of 
		sources generated (to check for compatibility with each chosen IMR)

ScenarioShakeMapApp

	Add plotting of rupture surface as a dot at each point on the gridded surface?
	Use getInfo for each source to provide users with information.

Ned - Run a forecast with non-zero mags up to mag 10 to search for numerical breakdowns (e.g., Math.pow(-num, non-integer) ) or search for for Math.pow.

SimpleGriddedFaultFactory

	we create a new instance of this object every time we create 
	a new surface; it would be more efficient to use the set methods
	before getting a new surface (use the setAll() method added by Ned).

(even lower priority below)

Allow choosing of multiple ERFs (e.g., hand built ERF_EpistemicList)

Implement getApplicableRegion() and isLocWithinApplicableRegion() methods in implemented ERFs.

DisaggregationCalculator is similar to HazardCurveCalculator; should the two be combined?

HazardCurveApplet - In the IMT editor section the loop over independent parameters of the chosen IMT can presently deal only with DoubleDiscreteParameter objects (rather than any parameter type).  Should we generalize this?

EvenlyGriddedSurface: 1) make the getNthSubsetSurface() method more efficient, and have the getAveDip() method compute the dip explicitly (in case it's a subset of a listric fault)?

Decide how to handle rake=NaN in each IMR (can rake-NaN in an EarthquakeRupture object?).

Decide on and implement a licensing agreement.

Decide on and implement email groups.

Figure out why applets don't resize with browser window size on Mac OS.

Create an archived email list or discussion board for OpenSHA.

Add 3D visualization to GriddedFaultApplet (need Java3D on Mac OS first)?

Go over exception throwing in entire package to make sure it looks appropriate.

AttenRelApp:

	Problem:  if you violate a parameter constraint when hitting the add trace button 
	(rather than hitting return in the parameter editor) you need to hit add trace again
	if you accept the value.  Nitin and Vipin say this is a problem with Java (focus at
	time of exception throwing is lost).


