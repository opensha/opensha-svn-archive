**************** SHORT TERM (HIGH PRIORITY): ****************
-------------------------------------------------------------

See if mac can now handle different styles of tabs - can change only if you change the entire look and feel (e.g., not OS specific).

1) Change Vs30 servlet to return "A", "B", "BC", ... rather than the numberical value.  So, in the data file that we read change each of the numerical values as follows (actually make a new file):

	E  163 
	DE 298 
	D  301 
	CD 372 
	C  464 
	BC 724 
	B  686

	All others should be set as NA (meaning "not available").  HOWEVER, PLEASE LET ME KNOW
	WHAT OTHER VALUES ARE IN THAT FILE SO I CAN MAKE SURE I DIDN'T MISS ANY.

	Also, make a README file in the directory where that data is stored describing what
	was done.  BTW, the original file "vsgrid60s.txt" was sent by Vince Quitoriano
	(a member of the USGS ShakeMap group) to me on 6/18/03. Please put this latter info
	in the readme file as well.

	Name the new servlet: WillsSiteClassServlet

	Rename old sevlet: SCEC_BasinDepthServlet

	Use the new site-type translator that Ned created (it's in SiteTranlator.java, 
	and he moved the SiteTranslatorNew.java to SiteTranslatorOld.java).

Get Bruce's code running on Mac OS X - done, waiting to hear from Hope on whether it works.

ScenarioShakeMapApp

	make image scalable with window size (although keep aspect ratio fixed)

	3) save matadata for each run in a "map_info.txt" file, 
	and put a copy of this on the server in the directory for this run.

	make URLs in info window live links (download when clicked)?

	fix blank-map problem (grdcut gets messed up) - Ned will fix

	2) change set sites from CVM list options:

		"Apply same ..."
		"Use the Wills et al. (2000) Map Web Service"
		"Use both Wills Map and SCEC Basin Depth Web Service"

	4) make checkbox options in MapGuiBean boolean parameters and put them in the GMT_MapGenerator 
	(which means take the log values in the latter as well).  Also move everything out of the MapGuiBean
	so the latter is simply a wrapper around the GMT_MapGenerator (make the map and show the map and
	metadata from the main app).

	move "set site params" JCombo in  Region&SiteGuiBean to a StringParameter and add it to the list.

	5) set the scaleLabel argument (added to GMT_MapGenerator as described below) according to chosen IMT
	(the GMT_MapGenerator will wrap it with "log(*)" is that option was chosen.

	6) after all the above are done, subclass the GMT_MapGenerator as GMT_MapGeneratorForShakeMaps 
	in the sha package so it can take an EarthquakeRupture and optionally a hypocenter for the map 
	(make the MapGuiBean wrap this new class rather than the parent).  

	7) add option to make Hazus shape files to the GMT_MapGeneratorForShakeMaps class (add this to the script).  
	

GMT_MapGenerator:

	add a "scaleLabel" string to all of the makeMap*(*) methods and use this in 
	place of the the hard-coded "tempLabel" String presently being used.  Also
	wrap it with log(*) in necessary.


Make a BooleanParameter where the editor is a checkbox (only show name since there are no units).  Make sure the editor shows the info when moused over.

Access site-type servlets from the SitesInGriddedRegion rather than the GuiBean (so servlets can be accessed without having to have a GUI).

Finish making it so scenario shakemaps can be calculated in stand-alone mode.  Make getScenarioShakeMapData(*) method take an EarthquakeRupture (not a ProbEarthquakeRupture) rather than an ERF, source, and rupture index.  Also make sure that value is between 0 and 1 if isProbAtIML=false.  Have the above method return xyzData rather than taking it as an argument (it's not needed as input since the sitesInGriddedRegion has the lats and lons for the calc).

We need to somehow metadata in the HazardCurveCalculator; also make the ability to "peel off" the plot/metadata window (Ned and Nitin will discuss this more later)?

Finish PEER Set 2 problems (Ned).

Finish PEER results plotter & data submission tool (when they give us the final files).

Make all interpolations of hazard curves based on log(prob) vs log(IML) or log(EqvPoisRate) vs log(IML).  Do this by adding a method to DiscretizedFunctionAPI (e.g., getInterpolatedY_inLogXLogYDomain(double x). Ned needs to double check these.

Find a database we can reference for lat/lon values of cities in California.  Add some of these to the control panel.  Nitin has one.

Fix horizontal streaking due to setting site effects in gridded region from CVM for small grid spacings?  Ned & Nitin need to discuss this.

Investigate what proper longitude limits are with respect to RelativeLocation, 0 to 360, -180 to 180, -180 to 360, or -360 to 360.

*****************************************************************

HazardSpectrumApplet - Look into making it so the ERF_GuiBean and EqkRupSelectorGuiBean use the same ERF instances (in cases where both have the same ERF, although sometime on or the other might have an ERF that the other one does not)?  This will take some thought because the present implementation of the GuiBeans are a subclass of ParameterEditor which leads to even worse memory problems for the first attempted solution.  Solve this once we have a better idea of exactly what Caltrans wants.  Perhaps we should merge the two GuiBeans into one?

Ned - implement the empty-constructor version of the  WG02_EqkRupForecast (1 realization with modal values, handle timespan correctly, and delete WG02_WRAPPER_INPUT.DAT file when done.

Ned needs to think about the following:

	Subduction Interface
	Subduction IntraSlab
	Shallow Crustal in Active Tectonic Regions
	Shallow Crustal in Stable Tectonic Regions

Implement 2002 National Hazard maps model - Ned will work on.

Fix GriddedFaultApplet - horz/vert scaling - may be fixed; check it out.

Make J-unit tests for Campbells tests of the attenuation relationships (generalize as much as possible); shakemap tests well come from Ken later.  ned should look at.  Nitin says there are still important discrepancies.

Generalize ERF servlets so that one object can be used for any arbitrary ERF (or ERF epistemic list).  Ned will check this out.

Finish STEP map making capability according to feedback from Matt and Lucy (and solve the Vs30 on water issue).

SimpleListricGriddedFaultFactory has problem - run main method to find it.  Ned will look at this.

Explore the benefit of using RelativeLocation.getApproxHorzDistance(*) as opposed to RelativeLocation.getHorzDistance(*) in the hazard calculations.

Should we create an AjustableParametersAPI for all objects that have a list of adjustable parameters?

Make the setting values from CVM to be webservice rather than a servlet. Currently we are reading the CVM values from the flat files, make it such that it can be plugged to different CVM webservices. 


**************** LONG TERM (LOWER PRIORITY): ****************
-------------------------------------------------------------

IMR_GuiBean 	-extend to allow multiple IMRs to be selected, with relative weights 
		applied to each.  This will require using an epistemic list control 
		panel (generalize existing one?) to declare what to compute and 
		plot(ind. curves, mean, fractile, ...). 

		-Create capability to associate IMRs to specific source types in the calculations
		(this will take some thought).

ProbEqkSource	Define field to declare what type of source it is 
		(e.g., subduction zone vs normal vs reverse ...) and add to API. 
		Ned will work on what the various options should be.

ERF		-extend API to include getting max and min magnitude, and the various types of 
		sources generated (to check for compatibility with each chosen IMR)

Ned - Run a forecast with non-zero mags up to mag 10 to search for numerical breakdowns (e.g., Math.pow(-num, non-integer) ) or search for for Math.pow.

SimpleGriddedFaultFactory

	we create a new instance of this object every time we create 
	a new surface; it would be more efficient to use the set methods
	before getting a new surface (use the setAll() method added by Ned).

EvenlyGriddedSurface: have the getAveDip() method compute the dip explicitly (in case it's a subset of a listric fault)?

(even lower priority below)

Allow choosing of multiple ERFs (e.g., hand built ERF_EpistemicList)

Implement getApplicableRegion() and isLocWithinApplicableRegion() methods in implemented ERFs.

DisaggregationCalculator is similar to HazardCurveCalculator; should the two be combined?

HazardCurveApplet - In the IMT editor section the loop over independent parameters of the chosen IMT can presently deal only with DoubleDiscreteParameter objects (rather than any parameter type).  Should we generalize this?

Decide how to handle rake=NaN in each IMR (can rake-NaN in an EarthquakeRupture object?).

Decide on and implement a licensing agreement.

Decide on and implement email groups.

Figure out why applets don't resize with browser window size on Mac OS.

Create an archived email list or discussion board for OpenSHA.

Add 3D visualization to GriddedFaultApplet (need Java3D on Mac OS first)?

Go over exception throwing in entire package to make sure it looks appropriate.

AttenRelApp:

	Problem:  if you violate a parameter constraint when hitting the add trace button 
	(rather than hitting return in the parameter editor) you need to hit add trace again
	if you accept the value.  Nitin and Vipin say this is a problem with Java (focus at
	time of exception throwing is lost).


