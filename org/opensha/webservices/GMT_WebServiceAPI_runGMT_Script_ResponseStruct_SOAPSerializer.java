// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1, build EA-R39)

package org.opensha.webservices;

import javax.xml.namespace.QName;

import com.sun.xml.rpc.encoding.CombinedSerializer;
import com.sun.xml.rpc.encoding.Initializable;
import com.sun.xml.rpc.encoding.InternalTypeMappingRegistry;
import com.sun.xml.rpc.encoding.ObjectSerializerBase;
import com.sun.xml.rpc.encoding.SOAPDeserializationContext;
import com.sun.xml.rpc.encoding.SOAPDeserializationState;
import com.sun.xml.rpc.encoding.SOAPSerializationContext;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.streaming.XMLReader;
import com.sun.xml.rpc.streaming.XMLReaderUtil;
import com.sun.xml.rpc.streaming.XMLWriter;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;

public class GMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final QName ns1_result_QNAME = new QName("", "result");
    private static final QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final int myRESULT_INDEX = 0;

    public GMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }

    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
    }

    public Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        org.opensha.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct instance = new org.opensha.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct();
        org.opensha.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPBuilder builder = null;
        Object member;
        boolean isComplete = true;
        QName elementName;

        reader.nextElementContent();
        if (reader.getState() == XMLReader.START) {
            member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(null, reader, context);
            if (member instanceof SOAPDeserializationState) {
                if (builder == null) {
                    builder = new org.opensha.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPBuilder();
                }
                state = registerWithMemberState(instance, state, member, myRESULT_INDEX, builder);
                isComplete = false;
            } else {
                instance.setResult((java.lang.String)member);
            }
            reader.nextElementContent();
        }
        elementName = reader.getName();

        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (Object)instance : (Object)state);
    }

    public void doSerializeInstance(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        org.opensha.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct instance = (org.opensha.webservices.GMT_WebServiceAPI_runGMT_Script_ResponseStruct)obj;

        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getResult(), ns1_result_QNAME, null, writer, context);
    }
    protected void verifyName(XMLReader reader, QName expectedName) throws Exception {
    }
}
