// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1, build EA-R39)

package junk.webservices.client;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class GMT_WebServiceAPI_Stub
    extends com.sun.xml.rpc.client.StubBase
    implements junk.webservices.client.GMT_WebServiceAPI {


    /*
     *  public constructor
     */
    public GMT_WebServiceAPI_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://gravity.usc.edu/gmtWS/ws/GMT_WS");
    }


    /*
     *  implementation of runGMT_Script
     */
    public java.lang.String runGMT_Script(java.lang.String[] arrayOfString_1, javax.activation.DataHandler[] arrayOfDataHandler_2)
        throws java.rmi.RemoteException {

        try {

            StreamingSenderState _state = _start(_handlerChain);

            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(runGMT_Script_OPCODE);
            junk.webservices.client.GMT_WebServiceAPI_runGMT_Script_RequestStruct _myGMT_WebServiceAPI_runGMT_Script_RequestStruct =
                new junk.webservices.client.GMT_WebServiceAPI_runGMT_Script_RequestStruct();

            _myGMT_WebServiceAPI_runGMT_Script_RequestStruct.setArrayOfString_1(arrayOfString_1);
            _myGMT_WebServiceAPI_runGMT_Script_RequestStruct.setArrayOfDataHandler_2(arrayOfDataHandler_2);

            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_runGMT_Script_runGMT_Script_QNAME);
            _bodyBlock.setValue(_myGMT_WebServiceAPI_runGMT_Script_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGMT_WebServiceAPI_runGMT_Script_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);

            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");

            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);

            junk.webservices.client.GMT_WebServiceAPI_runGMT_Script_ResponseStruct _myGMT_WebServiceAPI_runGMT_Script_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGMT_WebServiceAPI_runGMT_Script_ResponseStruct =
                    (junk.webservices.client.GMT_WebServiceAPI_runGMT_Script_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGMT_WebServiceAPI_runGMT_Script_ResponseStruct =
                    (junk.webservices.client.GMT_WebServiceAPI_runGMT_Script_ResponseStruct)_responseObj;
            }

            return _myGMT_WebServiceAPI_runGMT_Script_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }


    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case runGMT_Script_OPCODE:
                _deserialize_runGMT_Script(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", Integer.toString(opcode));
        }
    }



    /*
     * This method deserializes the body of the runGMT_Script operation.
     */
    private void _deserialize_runGMT_Script(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        Object myGMT_WebServiceAPI_runGMT_Script_ResponseStructObj =
            ns1_myGMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPSerializer.deserialize(ns1_runGMT_Script_runGMT_ScriptResponse_QNAME,
                bodyReader, deserializationContext);

        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_runGMT_Script_runGMT_ScriptResponse_QNAME);
        bodyBlock.setValue(myGMT_WebServiceAPI_runGMT_Script_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }




    public String _getDefaultEnvelopeEncodingStyle() {
        return null;
    }

    public String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }

    public String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }

    public void _setEncodingStyle(String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }





    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }

    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }

    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_myGMT_WebServiceAPI_runGMT_Script_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, junk.webservices.client.GMT_WebServiceAPI_runGMT_Script_RequestStruct.class, ns1_runGMT_Script_TYPE_QNAME);
        ns1_myGMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, junk.webservices.client.GMT_WebServiceAPI_runGMT_Script_ResponseStruct.class, ns1_runGMT_ScriptResponse_TYPE_QNAME);
    }

    private static final QName _portName = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "GMT_WebServiceAPIPort");
    private static final int runGMT_Script_OPCODE = 0;
    private static final QName ns1_runGMT_Script_runGMT_Script_QNAME = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "runGMT_Script");
    private static final QName ns1_runGMT_Script_TYPE_QNAME = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "runGMT_Script");
    private CombinedSerializer ns1_myGMT_WebServiceAPI_runGMT_Script_RequestStruct_SOAPSerializer;
    private static final QName ns1_runGMT_Script_runGMT_ScriptResponse_QNAME = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "runGMT_ScriptResponse");
    private static final QName ns1_runGMT_ScriptResponse_TYPE_QNAME = new QName("http://gravity.usc.edu/gmt/ws/GMT_WS", "runGMT_ScriptResponse");
    private CombinedSerializer ns1_myGMT_WebServiceAPI_runGMT_Script_ResponseStruct_SOAPSerializer;
    private static final String[] myNamespace_declarations =
                                        new String[] {
                                            "ns0", "http://gravity.usc.edu/gmt/ws/GMT_WS",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };

    private static final QName[] understoodHeaderNames = new QName[] {  };
}
