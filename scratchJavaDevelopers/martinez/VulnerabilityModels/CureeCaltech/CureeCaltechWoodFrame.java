package scratchJavaDevelopers.martinez.VulnerabilityModels.CureeCaltech;

import java.util.ArrayList;
import scratchJavaDevelopers.martinez.VulnerabilityModels.VulnerabilityModel;

public abstract class CureeCaltechWoodFrame extends VulnerabilityModel {
	protected String displayName = "";
	protected static double[] IML = {
			0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0,
			1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0

	};
	
	protected void setInitVars() {
		supportedTypes = new ArrayList<String>();
		supportedTypes.add("scratchJavaDevelopers.martinez.WoodFrame");
		setPeriod(0.2);
	}
	
	@Override
	/**
	 * See the general contract in VulnerabilityFunction
	 */
	public ArrayList<double[]> getDFTable() {
		ArrayList<double[]> rtn = new ArrayList<double[]>();
		double[] DF = getDFArray();
		double[] COVDF = getCOVDFArray();
		
		for(int i = 0; i < NIML; ++i) {
			double[] tmp = {IML[i], DF[i], COVDF[i]};
			rtn.add(tmp);
		}
		return rtn;
	}
	@Override
	/**
	 * See the general contract in VulnerabilityModel
	 */
	public double getDF(double IML) {
		// TODO Auto-generated method stub
		return 0;
	}
	@Override
	/**
	 * See the general contract in VulnerabilityModel
	 */
	public String getIMT() {
		return VulnerabilityModel.SA;
	}
	@Override
	/**
	 * See the general contract in VulnerabilityModel
	 */
	public String getDisplayName() {
		return displayName;
	}
	protected abstract double[] getDFArray();
	protected abstract double[] getCOVDFArray();
}
